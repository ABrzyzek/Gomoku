from unittest import TestCase
from Game import Game


class TestGame(TestCase):

    game = Game(3, '[ ]', 'X', 'O', 3)

    def test_is_valid_side_square(self):
        self.assertEqual(3, self.game._is_valid_side_square(3))
        self.assertEqual(26, self.game._is_valid_side_square(26))
        with self.assertRaises(Exception):
            self.game._is_valid_side_square(2)
        with self.assertRaises(Exception):
            self.game._is_valid_side_square(27)

    def test_is_valid_background_sign(self):
        with self.assertRaises(Exception):
            self.game._is_valid_background_sign('')
        self.assertEqual('1', self.game._is_valid_background_sign('1'))
        self.assertEqual('12', self.game._is_valid_background_sign('12'))
        self.assertEqual('123', self.game._is_valid_background_sign('123'))
        self.assertEqual('1234', self.game._is_valid_background_sign('1234'))
        with self.assertRaises(Exception):
            self.game._is_valid_background_sign('12345')

    def test_is_valid_player_sign(self):
        self.assertEqual('X', self.game._is_valid_player_sign('X', ' '))
        self.assertEqual('O', self.game._is_valid_player_sign('O', ' '))
        self.assertEqual('[]', self.game._is_valid_player_sign('[]', '1234'))
        self.assertEqual('[]', self.game._is_valid_player_sign('[]', '123'))
        self.assertEqual('[]', self.game._is_valid_player_sign('[]', '12'))
        with self.assertRaises(Exception):
            self.game._is_valid_player_sign('[]', '1')
        with self.assertRaises(Exception):
            self.game._is_valid_player_sign('', '1')

    def test_is_valid_side_sequence(self):
        with self.assertRaises(Exception):
            self.game._is_valid_side_sequence(2, 3)
        self.assertEqual(3, self.game._is_valid_side_sequence(3, 10))
        self.assertEqual(10, self.game._is_valid_side_sequence(10, 10))
        with self.assertRaises(Exception):
            self.game._is_valid_side_sequence(4, 3)

    def test_is_valid_letter(self):
        self.assertEqual(True, self.game._is_valid_letter('A'))
        self.assertEqual(True, self.game._is_valid_letter('a'))
        self.assertEqual(True, self.game._is_valid_letter('C'))
        self.assertEqual(True, self.game._is_valid_letter('c'))
        self.assertEqual(False, self.game._is_valid_letter('D'))
        self.assertEqual(False, self.game._is_valid_letter('d'))
        self.assertEqual(False, self.game._is_valid_letter('adada'))
        self.assertEqual(False, self.game._is_valid_letter('z'))
        self.assertEqual(False, self.game._is_valid_letter(''))
        self.assertEqual(False, self.game._is_valid_letter('za'))

    def test_is_valid_number(self):
        self.assertEqual(True, self.game._is_valid_number('1'))
        self.assertEqual(True, self.game._is_valid_number('15'))
        self.assertEqual(True, self.game._is_valid_number('26'))
        self.assertEqual(False, self.game._is_valid_number('27'))
        self.assertEqual(False, self.game._is_valid_number('0'))
        self.assertEqual(False, self.game._is_valid_number('-5'))
        self.assertEqual(False, self.game._is_valid_number('09'))

    def test_check_win(self):
        self.assertEqual(False, self.game.check_win(True))
        game1 = Game(3, ' ', 'x', 'o', 3)
        game1.replace_sign(True, '1a')
        game1.replace_sign(True, '2a')
        game1.replace_sign(True, '3a')
        game1.replace_sign(True, '1b')
        game1.replace_sign(True, '2b')
        game1.replace_sign(True, '3b')
        game1.replace_sign(True, '1c')
        game1.replace_sign(True, '2c')
        game1.replace_sign(True, '3c')
        self.assertEqual(False, game1.check_win(False))
        game2 = Game(10, ' ', 'x', 'o', 5)
        game2.replace_sign(False, '7c')
        game2.replace_sign(False, '8d')
        game2.replace_sign(False, '9e')
        game2.replace_sign(False, '10f')
        game2.replace_sign(False, '6b')
        self.assertEqual(True, game2.check_win(False))
        game3 = Game(10, ' ', 'x', 'o', 5)
        game3.replace_sign(False, '1j')
        game3.replace_sign(False, '2j')
        game3.replace_sign(False, '3j')
        game3.replace_sign(False, '4j')
        game3.replace_sign(False, '5j')
        self.assertEqual(True, game3.check_win(False))
        game4 = Game(10, ' ', 'x', 'o', 5)
        game4.replace_sign(False, '1i')
        game4.replace_sign(False, '2h')
        game4.replace_sign(False, '3g')
        game4.replace_sign(False, '4f')
        game4.replace_sign(False, '5e')
        self.assertEqual(True, game4.check_win(False))
        game5 = Game(10, ' ', 'x', 'o', 5)
        game5.replace_sign(False, '6j')
        game5.replace_sign(False, '7i')
        game5.replace_sign(False, '8h')
        game5.replace_sign(False, '9g')
        game5.replace_sign(False, '10f')
        self.assertEqual(True, game5.check_win(False))
        game6 = Game(10, ' ', 'x', 'o', 5)
        game6.replace_sign(False, '1e')
        game6.replace_sign(False, '2f')
        game6.replace_sign(False, '3g')
        game6.replace_sign(False, '4h')
        game6.replace_sign(False, '5i')
        self.assertEqual(True, game6.check_win(False))
        game7 = Game(10, ' ', 'x', 'o', 5)
        game7.replace_sign(False, '9f')
        game7.replace_sign(False, '8e')
        game7.replace_sign(False, '7d')
        game7.replace_sign(False, '6c')
        game7.replace_sign(False, '5b')
        self.assertEqual(True, game7.check_win(False))

    def test_check_horizontal(self):
        self.assertEqual(False, self.game._check_horizontal('o'))
        game1 = Game(3, ' ', 'x', 'o', 3)
        game1.replace_sign(True, '1a')
        game1.replace_sign(True, '2a')
        game1.replace_sign(True, '3a')
        game1.replace_sign(True, '1b')
        game1.replace_sign(True, '2b')
        game1.replace_sign(True, '3b')
        game1.replace_sign(True, '1c')
        game1.replace_sign(True, '2c')
        game1.replace_sign(True, '3c')
        self.assertEqual(False, game1._check_horizontal('o'))
        game2 = Game(10, ' ', 'x', 'o', 5)
        game2.replace_sign(False, '7c')
        game2.replace_sign(False, '8d')
        game2.replace_sign(False, '9e')
        game2.replace_sign(False, '10f')
        game2.replace_sign(False, '6b')
        self.assertEqual(False, game2._check_horizontal('o'))
        game3 = Game(10, ' ', 'x', 'o', 5)
        game3.replace_sign(False, '1j')
        game3.replace_sign(False, '2j')
        game3.replace_sign(False, '3j')
        game3.replace_sign(False, '4j')
        game3.replace_sign(False, '5j')
        self.assertEqual(False, game3._check_horizontal('o'))
        game4 = Game(10, ' ', 'x', 'o', 5)
        game4.replace_sign(False, '1i')
        game4.replace_sign(False, '2h')
        game4.replace_sign(False, '3g')
        game4.replace_sign(False, '4f')
        game4.replace_sign(False, '5e')
        self.assertEqual(False, game4._check_horizontal('o'))
        game5 = Game(10, ' ', 'x', 'o', 5)
        game5.replace_sign(False, '6j')
        game5.replace_sign(False, '7i')
        game5.replace_sign(False, '8h')
        game5.replace_sign(False, '9g')
        game5.replace_sign(False, '10f')
        self.assertEqual(False, game5._check_horizontal('o'))
        game6 = Game(10, ' ', 'x', 'o', 5)
        game6.replace_sign(False, '1e')
        game6.replace_sign(False, '2f')
        game6.replace_sign(False, '3g')
        game6.replace_sign(False, '4h')
        game6.replace_sign(False, '5i')
        self.assertEqual(False, game6._check_horizontal('o'))
        game7 = Game(10, ' ', 'x', 'o', 5)
        game7.replace_sign(False, '9f')
        game7.replace_sign(False, '8e')
        game7.replace_sign(False, '7d')
        game7.replace_sign(False, '6c')
        game7.replace_sign(False, '5b')
        self.assertEqual(False, game7._check_horizontal('o'))
        game8 = Game(10, ' ', 'x', 'o', 5)
        game8.replace_sign(False, '3b')
        game8.replace_sign(False, '3c')
        game8.replace_sign(False, '3d')
        game8.replace_sign(False, '3e')
        game8.replace_sign(False, '3f')
        self.assertEqual(True, game8._check_horizontal('o'))

    def test_check_vertical(self):

        self.assertEqual(False, self.game._check_vertical(True))
        game1 = Game(3, ' ', 'x', 'o', 3)
        game1.replace_sign(True, '1a')
        game1.replace_sign(True, '2a')
        game1.replace_sign(True, '3a')
        game1.replace_sign(True, '1b')
        game1.replace_sign(True, '2b')
        game1.replace_sign(True, '3b')
        game1.replace_sign(True, '1c')
        game1.replace_sign(True, '2c')
        game1.replace_sign(True, '3c')
        self.assertEqual(False, game1._check_vertical('o'))
        game2 = Game(10, ' ', 'x', 'o', 5)
        game2.replace_sign(False, '7c')
        game2.replace_sign(False, '8d')
        game2.replace_sign(False, '9e')
        game2.replace_sign(False, '10f')
        game2.replace_sign(False, '6b')
        self.assertEqual(False, game2._check_vertical('o'))
        game3 = Game(10, ' ', 'x', 'o', 5)
        game3.replace_sign(False, '1j')
        game3.replace_sign(False, '2j')
        game3.replace_sign(False, '3j')
        game3.replace_sign(False, '4j')
        game3.replace_sign(False, '5j')
        self.assertEqual(True, game3._check_vertical('o'))
        game4 = Game(10, ' ', 'x', 'o', 5)
        game4.replace_sign(False, '1i')
        game4.replace_sign(False, '2h')
        game4.replace_sign(False, '3g')
        game4.replace_sign(False, '4f')
        game4.replace_sign(False, '5e')
        self.assertEqual(False, game4._check_vertical('o'))
        game5 = Game(10, ' ', 'x', 'o', 5)
        game5.replace_sign(False, '6j')
        game5.replace_sign(False, '7i')
        game5.replace_sign(False, '8h')
        game5.replace_sign(False, '9g')
        game5.replace_sign(False, '10f')
        self.assertEqual(False, game5._check_vertical('o'))
        game6 = Game(10, ' ', 'x', 'o', 5)
        game6.replace_sign(False, '1e')
        game6.replace_sign(False, '2f')
        game6.replace_sign(False, '3g')
        game6.replace_sign(False, '4h')
        game6.replace_sign(False, '5i')
        self.assertEqual(False, game6._check_vertical('o'))
        game7 = Game(10, ' ', 'x', 'o', 5)
        game7.replace_sign(False, '9f')
        game7.replace_sign(False, '8e')
        game7.replace_sign(False, '7d')
        game7.replace_sign(False, '6c')
        game7.replace_sign(False, '5b')
        self.assertEqual(False, game7._check_vertical('o'))
        game8 = Game(10, ' ', 'x', 'o', 5)
        game8.replace_sign(False, '3b')
        game8.replace_sign(False, '3c')
        game8.replace_sign(False, '3d')
        game8.replace_sign(False, '3e')
        game8.replace_sign(False, '3f')
        self.assertEqual(False, game8._check_vertical('o'))

    def test_check_diagonal_left_up(self):
        self.assertEqual(False, self.game._check_diagonal_left_up('o'))
        game1 = Game(3, ' ', 'x', 'o', 3)
        game1.replace_sign(True, '1a')
        game1.replace_sign(True, '2a')
        game1.replace_sign(True, '3a')
        game1.replace_sign(True, '1b')
        game1.replace_sign(True, '2b')
        game1.replace_sign(True, '3b')
        game1.replace_sign(True, '1c')
        game1.replace_sign(True, '2c')
        game1.replace_sign(True, '3c')
        self.assertEqual(False, game1._check_diagonal_left_up('o'))
        game2 = Game(10, ' ', 'x', 'o', 5)
        game2.replace_sign(False, '7c')
        game2.replace_sign(False, '8d')
        game2.replace_sign(False, '9e')
        game2.replace_sign(False, '10f')
        game2.replace_sign(False, '6b')
        self.assertEqual(False, game2._check_diagonal_left_up('o'))
        game3 = Game(10, ' ', 'x', 'o', 5)
        game3.replace_sign(False, '1j')
        game3.replace_sign(False, '2j')
        game3.replace_sign(False, '3j')
        game3.replace_sign(False, '4j')
        game3.replace_sign(False, '5j')
        self.assertEqual(False, game3._check_diagonal_left_up('o'))
        game4 = Game(10, ' ', 'x', 'o', 5)
        game4.replace_sign(False, '1i')
        game4.replace_sign(False, '2h')
        game4.replace_sign(False, '3g')
        game4.replace_sign(False, '4f')
        game4.replace_sign(False, '5e')
        self.assertEqual(False, game4._check_diagonal_left_up('o'))
        game5 = Game(10, ' ', 'x', 'o', 5)
        game5.replace_sign(False, '6j')
        game5.replace_sign(False, '7i')
        game5.replace_sign(False, '8h')
        game5.replace_sign(False, '9g')
        game5.replace_sign(False, '10f')
        self.assertEqual(True, game5._check_diagonal_left_up('o'))
        game6 = Game(10, ' ', 'x', 'o', 5)
        game6.replace_sign(False, '1e')
        game6.replace_sign(False, '2f')
        game6.replace_sign(False, '3g')
        game6.replace_sign(False, '4h')
        game6.replace_sign(False, '5i')
        self.assertEqual(False, game6._check_diagonal_left_up('o'))
        game7 = Game(10, ' ', 'x', 'o', 5)
        game7.replace_sign(False, '9f')
        game7.replace_sign(False, '8e')
        game7.replace_sign(False, '7d')
        game7.replace_sign(False, '6c')
        game7.replace_sign(False, '5b')
        self.assertEqual(False, game7._check_diagonal_left_up('o'))
        game8 = Game(10, ' ', 'x', 'o', 5)
        game8.replace_sign(False, '3b')
        game8.replace_sign(False, '3c')
        game8.replace_sign(False, '3d')
        game8.replace_sign(False, '3e')
        game8.replace_sign(False, '3f')
        self.assertEqual(False, game8._check_diagonal_left_up('o'))

    def test_check_diagonal_left_down(self):
        self.assertEqual(False, self.game._check_diagonal_left_down('o'))
        game1 = Game(3, ' ', 'x', 'o', 3)
        game1.replace_sign(True, '1a')
        game1.replace_sign(True, '2a')
        game1.replace_sign(True, '3a')
        game1.replace_sign(True, '1b')
        game1.replace_sign(True, '2b')
        game1.replace_sign(True, '3b')
        game1.replace_sign(True, '1c')
        game1.replace_sign(True, '2c')
        game1.replace_sign(True, '3c')
        self.assertEqual(False, game1._check_diagonal_left_down('o'))
        game2 = Game(10, ' ', 'x', 'o', 5)
        game2.replace_sign(False, '7c')
        game2.replace_sign(False, '8d')
        game2.replace_sign(False, '9e')
        game2.replace_sign(False, '10f')
        game2.replace_sign(False, '6b')
        self.assertEqual(False, game2._check_diagonal_left_down('o'))
        game3 = Game(10, ' ', 'x', 'o', 5)
        game3.replace_sign(False, '1j')
        game3.replace_sign(False, '2j')
        game3.replace_sign(False, '3j')
        game3.replace_sign(False, '4j')
        game3.replace_sign(False, '5j')
        self.assertEqual(False, game3._check_diagonal_left_down('o'))
        game4 = Game(10, ' ', 'x', 'o', 5)
        game4.replace_sign(False, '1i')
        game4.replace_sign(False, '2h')
        game4.replace_sign(False, '3g')
        game4.replace_sign(False, '4f')
        game4.replace_sign(False, '5e')
        self.assertEqual(True, game4._check_diagonal_left_down('o'))
        game5 = Game(10, ' ', 'x', 'o', 5)
        game5.replace_sign(False, '6j')
        game5.replace_sign(False, '7i')
        game5.replace_sign(False, '8h')
        game5.replace_sign(False, '9g')
        game5.replace_sign(False, '10f')
        self.assertEqual(False, game5._check_diagonal_left_down('o'))
        game6 = Game(10, ' ', 'x', 'o', 5)
        game6.replace_sign(False, '1e')
        game6.replace_sign(False, '2f')
        game6.replace_sign(False, '3g')
        game6.replace_sign(False, '4h')
        game6.replace_sign(False, '5i')
        self.assertEqual(False, game6._check_diagonal_left_down('o'))
        game7 = Game(10, ' ', 'x', 'o', 5)
        game7.replace_sign(False, '9f')
        game7.replace_sign(False, '8e')
        game7.replace_sign(False, '7d')
        game7.replace_sign(False, '6c')
        game7.replace_sign(False, '5b')
        self.assertEqual(False, game7._check_diagonal_left_down('o'))
        game8 = Game(10, ' ', 'x', 'o', 5)
        game8.replace_sign(False, '3b')
        game8.replace_sign(False, '3c')
        game8.replace_sign(False, '3d')
        game8.replace_sign(False, '3e')
        game8.replace_sign(False, '3f')
        self.assertEqual(False, game8._check_diagonal_left_down('o'))

    def test_check_diagonal_right_up(self):
        self.assertEqual(False, self.game._check_diagonal_right_up('o'))
        game1 = Game(3, ' ', 'x', 'o', 3)
        game1.replace_sign(True, '1a')
        game1.replace_sign(True, '2a')
        game1.replace_sign(True, '3a')
        game1.replace_sign(True, '1b')
        game1.replace_sign(True, '2b')
        game1.replace_sign(True, '3b')
        game1.replace_sign(True, '1c')
        game1.replace_sign(True, '2c')
        game1.replace_sign(True, '3c')
        self.assertEqual(False, game1._check_diagonal_right_up('o'))
        game2 = Game(10, ' ', 'x', 'o', 5)
        game2.replace_sign(False, '7c')
        game2.replace_sign(False, '8d')
        game2.replace_sign(False, '9e')
        game2.replace_sign(False, '10f')
        game2.replace_sign(False, '6b')
        self.assertEqual(True, game2._check_diagonal_right_up('o'))
        game3 = Game(10, ' ', 'x', 'o', 5)
        game3.replace_sign(False, '1j')
        game3.replace_sign(False, '2j')
        game3.replace_sign(False, '3j')
        game3.replace_sign(False, '4j')
        game3.replace_sign(False, '5j')
        self.assertEqual(False, game3._check_diagonal_right_up('o'))
        game4 = Game(10, ' ', 'x', 'o', 5)
        game4.replace_sign(False, '1i')
        game4.replace_sign(False, '2h')
        game4.replace_sign(False, '3g')
        game4.replace_sign(False, '4f')
        game4.replace_sign(False, '5e')
        self.assertEqual(False, game4._check_diagonal_right_up('o'))
        game5 = Game(10, ' ', 'x', 'o', 5)
        game5.replace_sign(False, '6j')
        game5.replace_sign(False, '7i')
        game5.replace_sign(False, '8h')
        game5.replace_sign(False, '9g')
        game5.replace_sign(False, '10f')
        self.assertEqual(False, game5._check_diagonal_right_up('o'))
        game6 = Game(10, ' ', 'x', 'o', 5)
        game6.replace_sign(False, '1e')
        game6.replace_sign(False, '2f')
        game6.replace_sign(False, '3g')
        game6.replace_sign(False, '4h')
        game6.replace_sign(False, '5i')
        self.assertEqual(False, game6._check_diagonal_right_up('o'))
        game7 = Game(10, ' ', 'x', 'o', 5)
        game7.replace_sign(False, '9f')
        game7.replace_sign(False, '8e')
        game7.replace_sign(False, '7d')
        game7.replace_sign(False, '6c')
        game7.replace_sign(False, '5b')
        self.assertEqual(True, game7._check_diagonal_right_up('o'))
        game8 = Game(10, ' ', 'x', 'o', 5)
        game8.replace_sign(False, '3b')
        game8.replace_sign(False, '3c')
        game8.replace_sign(False, '3d')
        game8.replace_sign(False, '3e')
        game8.replace_sign(False, '3f')
        self.assertEqual(False, game8._check_diagonal_right_up('o'))

    def test_check_diagonal_right_down(self):
        self.assertEqual(False, self.game._check_diagonal_right_down('o'))
        game1 = Game(3, ' ', 'x', 'o', 3)
        game1.replace_sign(True, '1a')
        game1.replace_sign(True, '2a')
        game1.replace_sign(True, '3a')
        game1.replace_sign(True, '1b')
        game1.replace_sign(True, '2b')
        game1.replace_sign(True, '3b')
        game1.replace_sign(True, '1c')
        game1.replace_sign(True, '2c')
        game1.replace_sign(True, '3c')
        self.assertEqual(False, game1._check_diagonal_right_down('o'))
        game2 = Game(10, ' ', 'x', 'o', 5)
        game2.replace_sign(False, '7c')
        game2.replace_sign(False, '8d')
        game2.replace_sign(False, '9e')
        game2.replace_sign(False, '10f')
        game2.replace_sign(False, '6b')
        self.assertEqual(False, game2._check_diagonal_right_down('o'))
        game3 = Game(10, ' ', 'x', 'o', 5)
        game3.replace_sign(False, '1j')
        game3.replace_sign(False, '2j')
        game3.replace_sign(False, '3j')
        game3.replace_sign(False, '4j')
        game3.replace_sign(False, '5j')
        self.assertEqual(False, game3._check_diagonal_right_down('o'))
        game4 = Game(10, ' ', 'x', 'o', 5)
        game4.replace_sign(False, '1i')
        game4.replace_sign(False, '2h')
        game4.replace_sign(False, '3g')
        game4.replace_sign(False, '4f')
        game4.replace_sign(False, '5e')
        self.assertEqual(False, game4._check_diagonal_right_down('o'))
        game5 = Game(10, ' ', 'x', 'o', 5)
        game5.replace_sign(False, '6j')
        game5.replace_sign(False, '7i')
        game5.replace_sign(False, '8h')
        game5.replace_sign(False, '9g')
        game5.replace_sign(False, '10f')
        self.assertEqual(False, game5._check_diagonal_right_down('o'))
        game6 = Game(10, ' ', 'x', 'o', 5)
        game6.replace_sign(False, '1e')
        game6.replace_sign(False, '2f')
        game6.replace_sign(False, '3g')
        game6.replace_sign(False, '4h')
        game6.replace_sign(False, '5i')
        self.assertEqual(True, game6._check_diagonal_right_down('o'))
        game7 = Game(10, ' ', 'x', 'o', 5)
        game7.replace_sign(False, '9f')
        game7.replace_sign(False, '8e')
        game7.replace_sign(False, '7d')
        game7.replace_sign(False, '6c')
        game7.replace_sign(False, '5b')
        self.assertEqual(False, game7._check_diagonal_right_down('o'))
        game8 = Game(10, ' ', 'x', 'o', 5)
        game8.replace_sign(False, '3b')
        game8.replace_sign(False, '3c')
        game8.replace_sign(False, '3d')
        game8.replace_sign(False, '3e')
        game8.replace_sign(False, '3f')
        self.assertEqual(False, game8._check_diagonal_right_down('o'))

    def test_full_board(self):
        self.assertEqual(False, self.game.full_board())
        game1 = Game(3, ' ', 'x', 'o', 3)
        game1.replace_sign(True, '1a')
        game1.replace_sign(True, '2a')
        game1.replace_sign(True, '3a')
        game1.replace_sign(True, '1b')
        game1.replace_sign(True, '2b')
        game1.replace_sign(True, '3b')
        game1.replace_sign(True, '1c')
        game1.replace_sign(True, '2c')
        game1.replace_sign(True, '3c')
        self.assertEqual(True, game1.full_board())
        game2 = Game(3, ' ', 'x', 'o', 3)
        game2.replace_sign(True, '1a')
        game2.replace_sign(True, '2a')
        game2.replace_sign(True, '3a')
        game2.replace_sign(True, '1b')
        game2.replace_sign(True, '2b')
        game2.replace_sign(True, '3b')
        game2.replace_sign(True, '1c')
        game2.replace_sign(True, '2c')
        self.assertEqual(False, game2.full_board())
        game3 = Game(4, ' ', 'x', 'o', 3)
        game3.replace_sign(True, '1a')
        game3.replace_sign(True, '2a')
        game3.replace_sign(True, '3a')
        game3.replace_sign(True, '1b')
        game3.replace_sign(True, '2b')
        game3.replace_sign(True, '3b')
        game3.replace_sign(True, '1c')
        game3.replace_sign(True, '2c')
        game3.replace_sign(True, '3c')
        game3.replace_sign(True, '3d')
        game3.replace_sign(True, '1d')
        game3.replace_sign(True, '2d')
        game3.replace_sign(True, '4b')
        game3.replace_sign(True, '4c')
        game3.replace_sign(True, '4a')
        game3.replace_sign(True, '4d')
        self.assertEqual(True, game3.full_board())
